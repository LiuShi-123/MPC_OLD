CMAKE_MINIMUM_REQUIRED(VERSION 3.16)
PROJECT(MPC)

SET(CMAKE_THREAD_PREFER_PTHREAD TRUE)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
FIND_PACKAGE(Threads REQUIRED)
FIND_PACKAGE(yaml-cpp CONFIG REQUIRED)
INCLUDE_DIRECTORIES(./include ./coppeliaSim/include ./coppeliaSim//include/stack ./coppeliaSim/remoteApi /usr/local/include/yaml-cpp)

if(NEW_YAMLCPP_FOUND)
	ADD_DEFINITIONSY(-DHAVE_NEW_YAMLCPP)
endif(NEW_YAMLCPP_FOUND)
ADD_DEFINITIONS(-DNON_MATLAB_PARSING -DMAX_EXT_API_CONNECTIONS=255 -DDO_NOT_USE_SHARED_MEMORY)
FIND_PACKAGE(OsqpEigen REQUIRED)
FIND_PACKAGE(osqp REQUIRED)
FIND_PACKAGE(Eigen3 3.4 REQUIRED NO_MODULE)


SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib)
LINK_DIRECTORIES(/usr/local/lib/ ./lib/)
ADD_LIBRARY(RefWay STATIC ${CMAKE_CURRENT_SOURCE_DIR}/src/RefWay.cpp)
ADD_LIBRARY(SomeFunc STATIC ${CMAKE_CURRENT_SOURCE_DIR}/src/SomeFunc.cpp)

FILE(GLOB SOURCE_LIST 
	"./coppeliaSim/remoteApi/*.c"
        "./src/*.cpp")

SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)

ADD_EXECUTABLE(${PROJECT_NAME} main.cpp ${SOURCE_LIST})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} PRIVATE ${CMAKE_THREAD_LIBS_INIT} yaml-cpp.so RefWay SomeFunc ${CMAKE_CURRENT_SOURCE_DIR}/lib/remoteApi.so osqp::osqpstatic OsqpEigen::OsqpEigen Eigen3::Eigen)
